function valida_CNPJ(CNPJ: string): boolean;
var   dig13, dig14: string;
    sm, i, r, peso: integer;
begin
     CNPJ := StringReplace(CNPJ,'.','', [rfReplaceAll]);
     CNPJ := StringReplace(CNPJ,'/','', [rfReplaceAll]);
     CNPJ := StringReplace(CNPJ,'-','', [rfReplaceAll]);
// length - retorna o tamanho da string do CNPJ (CNPJ é um número formado por 14 dígitos)
  if (length(CNPJ) <> 14) then
     begin
            valida_CNPJ := false;
            exit;
          end;

// "try" - protege o código para eventuais erros de conversão de tipo através da função "StrToInt"
  try
{Cálculo do 1°. Digito Verificador }
    sm := 0;
    peso := 2;
    for i := 12 downto 1 do
    begin
// StrToInt converte o i-ésimo caractere do CNPJ em um número
      sm := sm + (StrToInt(CNPJ[i]) * peso);
      peso := peso + 1;
      if (peso = 10)
         then peso := 2;
    end;
    r := sm mod 11;
    if ((r = 0) or (r = 1))
       then dig13 := '0'
    else str((11-r):1, dig13); // converte um número no respectivo caractere numérico

{ Cálculo do 2o. Digito Verificador }
    sm := 0;
    peso := 2;
    for i := 13 downto 1 do
    begin
      sm := sm + (StrToInt(CNPJ[i]) * peso);
      peso := peso + 1;
      if (peso = 10)
         then peso := 2;
    end;
    r := sm mod 11;
    if ((r = 0) or (r = 1))
       then dig14 := '0'
    else str((11-r):1, dig14);

{ Verifica se os digitos calculados conferem com os digitos informados. }
    if ((dig13 = CNPJ[13]) and (dig14 = CNPJ[14]))
       then valida_CNPJ := true
    else valida_CNPJ := false;
  except
    valida_CNPJ := false
  end;
end;
