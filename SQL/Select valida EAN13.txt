---SELECT FEITO POR KALIEL PARA RETORNAR TODOS OS EAN13 INVÁLIDOS NA PA_ITEN_001
---TODO EAN13 TEM UM DÍGITO VERIFICADOR, E NESSE SELECT, O MESMO É CALCULADO
---ALÉM DO DÍGITO VERIFICADOR, O CALCULO VALIDA OS EAN's13 NÃO NUMÉRICOS OU TAMANHO <> 13


SELECT CODIGO, COR, TAM, BARRA, ULTIMO_DIG_BARRA, DIGITO_VERIFICADOR FROM(
SELECT CODIGO, COR, TAM, BARRA, ULTIMO_DIG_BARRA, MOD(10 - MOD((IMPARES+(PARES*3)),10),10) AS DIGITO_VERIFICADOR  FROM (
SELECT codigo, cor, tam, BARRA, SUBSTRING(BARRA FROM 13 FOR 1) ULTIMO_DIG_BARRA, 
(SELECT 

           (CAST(SUBSTRING(BARRA from 1 for 1) AS INTEGER) + 
            CAST(SUBSTRING(BARRA from 3 for 1) AS INTEGER) + 
            CAST(SUBSTRING(BARRA from 5 for 1) AS INTEGER) + 
            CAST(SUBSTRING(BARRA from 7 for 1) AS INTEGER) + 
            CAST(SUBSTRING(BARRA from 9 for 1) AS INTEGER) + 
            CAST(SUBSTRING(BARRA from 11 for 1) AS INTEGER)) AS IMPARES
    FROM PA_ITEN_001 P
WHERE P.BARRA = PA.BARRA
AND P.DEPOSITO = PA.DEPOSITO
AND P.LOTE = PA.LOTE
AND P.CODIGO = PA.CODIGO
AND P.COR = PA.COR
AND P.TAM = PA.TAM
AND P.TIPO = PA.TIPO
AND BARRA <> ''
),
(SELECT 
            (CAST(SUBSTRING(BARRA from 2 for 1) AS INTEGER) + 
            CAST(SUBSTRING(BARRA from 4 for 1) AS INTEGER) + 
            CAST(SUBSTRING(BARRA from 6 for 1) AS INTEGER) + 
            CAST(SUBSTRING(BARRA from 8 for 1) AS INTEGER) + 
            CAST(SUBSTRING(BARRA from 10 for 1) AS INTEGER) + 
            CAST(SUBSTRING(BARRA from 12 for 1) AS INTEGER)) AS PARES
    FROM PA_ITEN_001 P
WHERE P.BARRA = PA.BARRA
AND P.DEPOSITO = PA.DEPOSITO
AND P.LOTE = PA.LOTE
AND P.CODIGO = PA.CODIGO
AND P.COR = PA.COR
AND P.TAM = PA.TAM
AND P.TIPO = PA.TIPO
AND BARRA <> ''
)
FROM PA_ITEN_001 PA
WHERE BARRA <> ''))
WHERE NOT BARRA SIMILAR TO '[0-9]{13}' OR ULTIMO_DIG_BARRA <> DIGITO_VERIFICADOR